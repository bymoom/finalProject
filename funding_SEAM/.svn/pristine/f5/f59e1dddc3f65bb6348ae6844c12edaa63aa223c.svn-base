package com.funding.controller;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

import com.funding.dto.ProjectProposeCmtVO;
import com.funding.service.ProposeCmtService;

@Controller
public class ProposeCmtController {
	
	@Autowired
	private ProposeCmtService service;
	
	@RequestMapping(value="/replies/propose/list/{pjtprp_num}",method=RequestMethod.GET)
	@ResponseBody
	public ResponseEntity<Map<String, Object>> list(@PathVariable("pjtprp_num") int pjtprp_num) throws Exception {
		ResponseEntity<Map<String, Object>> result = null;
		Map<String, Object> dataMap = new HashMap<>();

		try {
			List<ProjectProposeCmtVO> CmtsList = service.selectReplyList(pjtprp_num);
			dataMap.put("proposeCmtsList", CmtsList);
			result = new ResponseEntity<>(dataMap, HttpStatus.OK);
		} catch (Exception e) {
			e.printStackTrace();
			result = new ResponseEntity<>(HttpStatus.INTERNAL_SERVER_ERROR);
		}
		
		return result;
	}
	
	@RequestMapping(value="/replies/propose/regist", method=RequestMethod.POST)
	@ResponseBody
	public ResponseEntity<String> regist(@RequestBody ProjectProposeCmtVO proposeCmt) throws Exception {
		ResponseEntity<String> entity = null;
		System.out.println(proposeCmt.toString());
		try {
			service.regist(proposeCmt);
			entity = new ResponseEntity<>(HttpStatus.OK);
		} catch(Exception e) {
			e.printStackTrace();
			entity = new ResponseEntity<>(HttpStatus.INTERNAL_SERVER_ERROR);
		}
		return entity;
	}
	
	
	/*@RequestMapping(value="modify/{free_cmts_num}", method= {RequestMethod.PUT, RequestMethod.PATCH})
	@ResponseBody
	public ResponseEntity<String> modify(@PathVariable("free_cmts_num") int free_cmts_num, @RequestBody FreeBoardCmtsVO freeBoardCmts) throws Exception {
		ResponseEntity<String> entity = null;
		
		System.out.println(freeBoardCmts.toString());
		freeBoardCmts.setFree_cmts_num(free_cmts_num);
		
		try {
			freeBoardCmtsService.modify(freeBoardCmts);
			entity = new ResponseEntity<>(HttpStatus.OK);
		} catch(Exception e) {
			e.printStackTrace();
			entity = new ResponseEntity<>(HttpStatus.INTERNAL_SERVER_ERROR);
		}
		
		return entity;
	}
	
	@RequestMapping(value="remove/{free_cmts_num}", method=RequestMethod.DELETE)
	@ResponseBody
	public ResponseEntity<String> remove(@PathVariable("free_cmts_num") int free_cmts_num) throws Exception {
		ResponseEntity<String> entity = null;
		
		try {
			freeBoardCmtsService.remove(free_cmts_num);
			entity = new ResponseEntity<>(HttpStatus.OK);
		} catch(Exception e) {
			e.printStackTrace();
			entity = new ResponseEntity<>(HttpStatus.INTERNAL_SERVER_ERROR);
		}
		return entity;
	}*/
}
