package com.funding.service;

import java.sql.SQLException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;

import com.funding.dao.NoticeDAO;
import com.funding.dao.Notice_atcDAO;
import com.funding.dto.NoticeVO;
import com.funding.dto.Notice_atcVO;
import com.funding.request.PageMaker;
import com.funding.request.SearchCriteria;

public class NoticeServiceImpl implements NoticeService{
	
	@Autowired
	private NoticeDAO noticeDAO;
	public void setNoticeDAO(NoticeDAO noticeDAO) {
		this.noticeDAO = noticeDAO;
	}
	
/*	@Autowired
	private Notice_atcDAO notice_atcDAO;
	public void setNotice_atcDAO(Notice_atcDAO notice_atcDAO) {
		this.notice_atcDAO = notice_atcDAO;
	}*/

	@Override
	public Map<String, Object> getNoticeList(SearchCriteria cri) throws SQLException {
		
		Map<String, Object> dataMap = new HashMap<String,Object>();
		List<NoticeVO> noticeList = noticeDAO.searchedNoticeList(cri);
		List<NoticeVO> pointList = noticeDAO.selectPointNoticeList(cri);
		int totalCount = noticeDAO.searchedNoticeListCount(cri);
		
		PageMaker pageMaker = new PageMaker();
		pageMaker.setCri(cri);
		pageMaker.setTotalCount(totalCount);
		
		dataMap.put("noticeList", noticeList);
		dataMap.put("pointList", pointList);
		dataMap.put("pageMaker", pageMaker);
		
		return dataMap;
		//System.out.println(dataMap);
	}

	@Override
	public List<NoticeVO> getPointNoticeList(SearchCriteria cri) throws SQLException {
		List<NoticeVO> noticeList = noticeDAO.selectPointNoticeList(cri);
		
		/*for(NoticeVO notice : noticeList) {
			List<>
		}*/
		return noticeList;
	}

	@Override
	public NoticeVO getNotice(int notice_num) throws SQLException {
		noticeDAO.increaseViewCnt(notice_num);
		NoticeVO notice = noticeDAO.selectNoticeByNotice_num(notice_num);
	
		return notice;
	}

	@Override
	public void regist(NoticeVO notice) throws SQLException {
		int nno=noticeDAO.selectNoticeSeqNext();
		
		notice.setNotice_num(nno);
		
		noticeDAO.insertNotice(notice);
	}

	@Override
	public void modify(NoticeVO notice) throws SQLException {
		noticeDAO.updateNotice(notice);
		
	}

	@Override
	public void remove(int notice_num) throws SQLException {
		noticeDAO.deleteNotice(notice_num);
		
	}

}
