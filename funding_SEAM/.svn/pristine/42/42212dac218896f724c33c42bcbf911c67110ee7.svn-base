package com.funding.service;

import java.sql.SQLException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import com.funding.dao.ProjectProposeDAO;
import com.funding.dto.Project_ProposeVO;
import com.funding.request.PageMaker;
import com.funding.request.SearchCriteria;

public class ProjectProposeServiceImpl implements ProjectProposeService{

	private ProjectProposeDAO prpDAO;
	
	public void setPrpDAO(ProjectProposeDAO prpDAO) {
		this.prpDAO = prpDAO;
	}
	
	@Override
	public Map<String, Object> getProposeList(SearchCriteria cri) throws SQLException {
		List<Project_ProposeVO> list = prpDAO.proposeList(cri);
		Map<String,Object> dataMap = new HashMap<String, Object>();
		
		int totalCount = prpDAO.proposeListCount(cri);
		/*for(Project_ProposeVO propose : list) {
			
		}*/
		PageMaker pageMaker = new PageMaker();
		pageMaker.setCri(cri);
		pageMaker.setTotalCount(totalCount);
		
		dataMap.put("propose", list);
		dataMap.put("pageMaker", pageMaker);
		
		return dataMap;
	}

	@Override
	public int nextSeq() throws SQLException {
		int seq = prpDAO.selectProposeSeqNext();
		return seq;
	}

	@Override
	public int selectMemberNum(String mem_name) throws SQLException {
		int num = prpDAO.selectMemberNum(mem_name);
		return num;
	}

	@Override
	public void insertPropose(Project_ProposeVO propose) throws SQLException {
		prpDAO.insertPropose(propose);
		
	}

	@Override
	public Project_ProposeVO selectProposeBy_num(int pjtprp_num) throws SQLException {
		Project_ProposeVO propose=prpDAO.selectProposeBy_num(pjtprp_num);
		return propose;
	}

	@Override
	public void updatePropose(Project_ProposeVO propose) throws SQLException {
		prpDAO.updatePropose(propose);
		
	}

	@Override
	public void deletePropose(int pjtprp_num) throws SQLException {
		prpDAO.deletePropose(pjtprp_num);
		
	}

	@Override
	public void disabledPropose(int pjtprp_num) throws SQLException {
		prpDAO.disabledPropose(pjtprp_num);
		
	}

	@Override
	public void enabledPropose(int pjtprp_num) throws SQLException {
		prpDAO.enabledPropose(pjtprp_num);
		
	}

	@Override
	public int selectEnabled(int pjtprp_num) throws SQLException {
		int num = prpDAO.selectEnabled(pjtprp_num);
		return num;
	}

	@Override
	public void listDisabledPropose(int pjtprp_num) throws SQLException {
		prpDAO.listDisabledPropose(pjtprp_num);
		
	}

	
}
