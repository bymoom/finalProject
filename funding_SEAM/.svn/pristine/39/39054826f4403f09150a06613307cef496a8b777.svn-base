package com.funding.dao;

import java.sql.SQLException;
import java.util.List;

import org.apache.ibatis.session.RowBounds;
import org.apache.ibatis.session.SqlSession;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;

import com.funding.dto.QnAVO;
import com.funding.request.SearchCriteria;

@Repository("QnADAO")
public class QnADAOImpl implements QnADAO{
	
	@Autowired
	private SqlSession sqlSession;
	public void setSqlSession(SqlSession sqlSession) {
		this.sqlSession = sqlSession;
	}

	@Override
	public List<QnAVO> selectSearchQnAList(SearchCriteria cri) throws SQLException {
		int offset = cri.getPageStartRowNum();
		int limit = cri.getPerPageNum();
		
		RowBounds rowBounds = new RowBounds(offset, limit);
		
		List<QnAVO> qnaList = sqlSession.selectList("QA-Mapper.selectSearchQnAList", cri, rowBounds);
		return qnaList;
	}

	@Override
	public int selectSearchQnAListTotalCount(SearchCriteria cri) throws SQLException {
		int count =sqlSession.selectOne("QA-Mapper.selectSearchQnAListTotalCount",cri);
		return count;
	}

	@Override
	public List<QnAVO> selectQnAList() throws SQLException {
		List<QnAVO> qnaList = sqlSession.selectList("QA-Mapper.selectQnAList");
		return qnaList;
	}

	@Override
	public QnAVO selectQnAByqa_Num(int qa_num) throws SQLException {
		QnAVO qna=sqlSession.selectOne("QA-Mapper.selectQnAByqa_Num", qa_num);
		return null;
	}

	@Override
	public void registQnA(QnAVO qna) throws SQLException {
		sqlSession.update("QA-Mapper.registQnA",qna);
	}

	@Override
	public void modifyQnA(QnAVO qna) throws SQLException {
		sqlSession.update("QA-Mapper.modifyQnA",qna);
	}

	@Override
	public void modifyQnAEnabled(QnAVO qna) throws SQLException {
		sqlSession.update("QA-Mapper.modifyQnAEnabled",qna);
		
	}

	@Override
	public void removeQnA(int qa_num) throws SQLException {
		sqlSession.update("QA-Mapper.removeQnA",qa_num);
	}

	@Override
	public void increaseQnAViewCnt(int qa_num) throws SQLException {
		sqlSession.update("QA-Mapper.increaseQnAViewCnt",qa_num);
		
	}

	@Override
	public int selectQnASeqNext() throws SQLException {
		int qa_num=sqlSession.selectOne("QA-Mapper.selectQnASeqNext");
		return qa_num;
	}

	@Override
	public boolean selectSecretQnA(QnAVO qna) throws SQLException {
		int result = sqlSession.selectOne("QA-Mapper.selectSecretQnA",qna);
		if(result>0) {
			return true;
		}else {
			return false;
		}
	}

	@Override
	public boolean updateSecretQnA(QnAVO qna) throws SQLException {
		int result=sqlSession.update("QA-Mapper.updateSecretQnA",qna);
		
		if(result>0) {
			return true;
		}else {
			return false;
		}
	}

}
