package com.funding.controller;

import java.io.PrintWriter;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletResponse;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.servlet.ModelAndView;

import com.funding.dto.NoticeVO;
import com.funding.request.SearchCriteria;
import com.funding.service.NoticeService;

@Controller
@RequestMapping("/board/notice/")
public class NoticeController {
	
	@Autowired
	private NoticeService noticeService;
	public void setNoticeService(NoticeService noticeService) {
		this.noticeService = noticeService;
	}
	
	@RequestMapping("notice_list")
	public ModelAndView noticeList(SearchCriteria cri,ModelAndView mnv)throws SQLException{
		String url="board/notice/notice_list.page";
		
		Map<String, Object> dataMap = noticeService.getNoticeList(cri);
		
		List<ColName> colNames = new ArrayList<ColName>();
		
		String[] colNameArr = {"","번&nbsp;호","제&nbsp;목","작성일","작성자","첨&nbsp;부","조회수"};
		String[] colWidthArr = {"4","10","46","10","10","10","10"};
		for(int i=0;i<colNameArr.length;i++) {
			colNames.add(new ColName(colNameArr[i], colWidthArr[i]));
		}
		
		dataMap.put("colNames", colNames);
		
		mnv.addAllObjects(dataMap);
		System.out.println(dataMap);
		mnv.setViewName(url);
		
		return mnv;		
	}
	
	@RequestMapping(value="regist",method=RequestMethod.GET)
	public String registForm()throws Exception{
		String url="board/notice/regist";
		return url;
		
	}
	
	@RequestMapping(value="regist",method=RequestMethod.POST)
	public String regist(NoticeVO notice, HttpServletResponse response)throws Exception{
		String url="redirect:notice_list.page";
		
		System.out.println(notice.toString());
		noticeService.regist(notice);
		
		
		response.setContentType("text/html;charset=utf-8");
		PrintWriter out = response.getWriter();
		out.println("<script>");
		out.println("alert('게시물이 정상 등록되었습니다');");
		out.println("window.opener.location.href='/board/notice/notice_list';window.close();");
		out.println("</script>");
		return url;
		
		
	}
	@RequestMapping(value="detail",method=RequestMethod.GET)
	public ModelAndView detail(int notice_num,ModelAndView mnv)throws Exception{
		String url="board/notice/detail.open";
		
		NoticeVO notice = noticeService.getNoticeDetail(notice_num);
		mnv.addObject("notice",notice);
		mnv.setViewName(url);
		return mnv;
	}
	
	@RequestMapping(value="modify",method=RequestMethod.GET)
	public String modifyForm(int notice_num, Model model)throws Exception{
		String url="/board/notice/modify.open";
		NoticeVO notice=noticeService.getNoticeDetail(notice_num);
		model.addAttribute("notice", notice);
	
		return url;
		
	}
	
/*	
	response.setContentType("text/html;charset=utf-8");
	PrintWriter out = response.getWriter();
	out.println("<script>");
	out.println("alert('게시물이 수정되었습니다');");
	out.println("window.opener.location.href='/board/notice/detail';window.close();");
	out.println("</script>");*/
	
	
	
	
	
	
	
	
	
	

}
