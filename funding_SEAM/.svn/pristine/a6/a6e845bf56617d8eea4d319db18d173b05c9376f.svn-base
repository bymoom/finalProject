package com.funding.controller.freeboard;

import java.io.PrintWriter;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.servlet.ModelAndView;

import com.funding.dto.FreeBoardCmtsVO;
import com.funding.dto.FreeBoardVO;
import com.funding.request.SearchCriteria;
import com.funding.service.freeboard.FreeBoardCmtsService;
import com.funding.service.freeboard.FreeBoardService;
import com.funding.util.Summernote;

@Controller
@RequestMapping("/board/free/*")
public class FreeBoardController {

	@Autowired
	private FreeBoardService freeBoardService;

	@Autowired
	private FreeBoardCmtsService freeBoardCmtsService;
	
	@Autowired
	private String summernoteImgPath;
	
	@RequestMapping(value="list")
	public ModelAndView list(SearchCriteria cri, ModelAndView mnv) throws Exception {
		String url = "board/free/list";
		Map<String, Object> dataMap = freeBoardService.getFreeBoardList(cri);

		mnv.addAllObjects(dataMap);
		mnv.setViewName(url);
		
		return mnv;
	}
	
	@RequestMapping(value="registForm")
	public ModelAndView registForm(ModelAndView mnv) throws Exception {
		String url = "board/free/regist";
		
		/**
		 * summernote_js.jsp로 어느 게시판인지 보내기 용도
		 * 해당 게시판의 url 입력할 것.
		 */
		String where = "board/free";
		mnv.addObject("where", where);
		//
		
		mnv.setViewName(url);
		return mnv;
	}
	
	@RequestMapping(value="uploadImg", produces="text/plain;charset=utf-8")
	@ResponseBody
	public ResponseEntity<String> uploadImg(MultipartFile file, HttpServletRequest request) throws Exception {
		
		System.out.println("upload.getOriginalFilename() : " + file.getOriginalFilename());
		
		ResponseEntity<String> result = null;
		
		/**
		 * summernote 이미지 업로드 용도
		 */
		String savePath = this.summernoteImgPath;
		String where = "freeboard"; //새로 생성될 폴더명
		Summernote summernote = new Summernote();
		result = summernote.uploadImg(file, request, savePath, where);
		//
		
		return result;
	}

	@RequestMapping(value="deleteImg", produces="text/plain;charset=utf-8")
	@ResponseBody
	public ResponseEntity<String> deleteImg(String fileName, HttpServletRequest request) throws Exception {
		ResponseEntity<String> result = null;
		String savePath = this.summernoteImgPath;
		String where = "freeboard"; //이미지가 저장되어있는 폴더명
		
		Summernote summernote = new Summernote();
		result = summernote.deleteImg(request, fileName, savePath, where);
		
		return result;
	}
	
	@RequestMapping(value="regist", method=RequestMethod.POST)
	public void regist(FreeBoardVO freeBoard, HttpServletResponse response) throws Exception {

		freeBoardService.regist(freeBoard);

		response.setContentType("text/html;charset=utf-8");
		PrintWriter out = response.getWriter();
		out.println("<script>");
		out.println("alert('글이 등록되었습니다!');");
		out.println("window.opener.location.href='/board/free/list';window.close();");
		out.println("</script>");
	}
	
	@RequestMapping(value="detail", method=RequestMethod.GET)
	public ModelAndView detail(int free_num, ModelAndView mnv) throws Exception {

		String url = "board/free/detail";
		
		try {
			FreeBoardVO freeBoard = freeBoardService.getFreeBoard(free_num);
			List<FreeBoardCmtsVO> freeBoardCmtsList = freeBoardCmtsService.getFreeBoardCmtsList(free_num);
			mnv.addObject("freeBoard", freeBoard);
			mnv.addObject("freeBoardCmtsList", freeBoardCmtsList);
		} catch (Exception e) {
			e.printStackTrace();
		}
		
		mnv.setViewName(url);
		
		return mnv;
	}
	
	@RequestMapping(value="modify/{free_num}", method=RequestMethod.POST)
	public void modify(@PathVariable("free_num") int free_num, Model model) throws Exception {
		
	}
	
	
	
}
