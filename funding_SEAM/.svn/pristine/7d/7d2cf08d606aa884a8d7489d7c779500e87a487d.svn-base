package com.funding.controller;

import java.sql.SQLException;
import java.util.List;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.servlet.ModelAndView;

import com.funding.dto.MemberVO;
import com.funding.dto.Project_ProposeVO;
import com.funding.request.ProposeRegistRequest;
import com.funding.request.SearchCriteria;
import com.funding.service.MemberService;
import com.funding.service.ProjectProposeService;

@Controller
public class ProposeController {

	@Autowired
	private MemberService memberService;
	@Autowired
	private ProjectProposeService proposeService;
	
	//프로젝트 제안 게시판 조회
	@RequestMapping(value = "/menu/propose", method = RequestMethod.GET)
	public ModelAndView projectProposeGET(ModelAndView model, SearchCriteria cri) throws Exception {
		String url = "propose/propose.page";
		Map<String, Object> dataMap = proposeService.getProposeList(cri);
//		int mem_num = 0;
		
		
//		List<Project_ProposeVO> list = (List<Project_ProposeVO>) dataMap.get("propose");
		
//		for(int i=0; i<list.size(); i++) {
//			mem_num = list.get(i).getMem_num();
//			System.out.println(mem_num);
//		}
		
		
//		MemberVO member = memberService.getMember(mem_num);
		
//		model.addObject("writer",member);
		model.addAllObjects(dataMap);
		model.setViewName(url);
//		model.addAttribute("propose",list);
		
		return model;
	}
	
	//프로젝트 제안 등록버튼 클릭
	@RequestMapping(value="/menu/proposeRegist",method=RequestMethod.GET)
	public String proposeRegistGET()throws Exception{
		String url="propose/proposeRegist.open";
		
		return url;
	}
	
	@RequestMapping(value="/menu/proposeRegist",method=RequestMethod.POST)
	public String proposeRegistPOST(Project_ProposeVO propose)throws Exception{
		String url="propose/regist_success";
			String mem_name=propose.getMem_name();
			MemberVO member = memberService.getMemberByName(mem_name);
			int mem_num = member.getMem_num();
			int pjtprp_num = proposeService.nextSeq();
			propose.setPjtprp_num(pjtprp_num);			
			propose.setMem_num(mem_num);
			
			try {
				proposeService.insertPropose(propose);
			}catch(SQLException e) {
				e.printStackTrace();
				url="propose/regist_fail";
			}
			
		return url;
	}
	
	@RequestMapping(value="/menu/proposeDetail",method=RequestMethod.GET)
	public String proposeDetail(int pjtprp_num,Model model)throws Exception{
		String url = "propose/detail.open";
		Project_ProposeVO propose = proposeService.selectProposeBy_num(pjtprp_num);
		
//		int mem_num = propose.getMem_num();
		
//		MemberVO member = memberService.getMember(mem_num);
		
		model.addAttribute("propose",propose);
//		model.addAttribute("member",member);
		return url;
	}
	
	@RequestMapping(value="/menu/modify",method=RequestMethod.GET)
	public String modify(int pjtprp_num,Model model)throws Exception{
		String url = "propose/modify.open";
		
		Project_ProposeVO propose = proposeService.selectProposeBy_num(pjtprp_num);
		
		int mem_num = propose.getMem_num();
		
		MemberVO member = memberService.getMember(mem_num);
		
		model.addAttribute("propose",propose);
		
		return url;
	}
	
	@RequestMapping(value="/menu/proposeModify",method=RequestMethod.POST)
	public String modifyPOST(Project_ProposeVO propose)throws Exception{
		String url="propose/modify_success";
		try {
			proposeService.updatePropose(propose);
		}catch(SQLException e) {
			e.printStackTrace();
			url="propose/modify_fail";
		}
		return url;
	}
	
	@RequestMapping("/menu/delete")
	public String delete(int pjtprp_num)throws Exception{
		String url="propose/delete_success";
		
		proposeService.deletePropose(pjtprp_num);
		
		return url;
	}
}
